name: Rust Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  COVERAGE_THRESHOLD: 65
  RUST_LOG: debug
  RUST_BACKTRACE: full

# This stops any running jobs when a new commit is pushed
# Reference: https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@1.90.0

      - uses: actions/cache@v4
        with:
          path: |
            target/
          key: build-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            build-

      - name: Run tests
        run: cargo test --locked


  quality-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: |
            target/
          key: quality-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            quality-

      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2025-09-01
          components: rustfmt
        
      - name: Check Rust formatting
        if: ${{ !cancelled() }}
        run: cargo +nightly-2025-09-01 fmt --check

      - uses: dtolnay/rust-toolchain@1.90.0
      - name: Check for clippy warnings
        if: ${{ !cancelled() }}
        run: cargo clippy --locked --workspace --all-targets --no-deps --all-features -- -D warnings

  code-coverage:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Cinstrument-coverage
      LLVM_PROFILE_FILE: ${{ github.event.repository.name }}-%p-%m.profraw
      COVERAGE_DIR: coverage-report
    permissions:
      # Needed to write a coverage report to the PR
      pull-requests: write
      # Needed to update the PR with a comment
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@1.90.0

      - uses: actions/cache@v4
        with:
          path: |
            target/**/*[\!.gcno\|\!.gcda|\!.profraw]
          key: coverage-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            coverage-

      - name: Run tests with coverage
        run: |
          cargo test --locked

      - uses: taiki-e/install-action@v2
        with:
          tool: grcov@0.10

      - name: Generate coverage reports
        run: |
          mkdir -p $COVERAGE_DIR
          grcov . \
            --branch -s . --binary-path ./target/ \
            --output-types cobertura,html,markdown --output-path $COVERAGE_DIR \
            --keep-only "crates/**" --ignore-not-existing \
            --ignore "crates/*/tests/*"

      - name: Upload coverage reports
        uses: actions/upload-artifact@v5
        with:
          name: coverage-report
          path: ${{ env.COVERAGE_DIR }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: ${{ env.COVERAGE_DIR }}/markdown.md

      - name: Fail if coverage below threshold
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ${{ env.COVERAGE_DIR }}/cobertura.xml
          fail_below_min: true
          thresholds: '${{ env.COVERAGE_THRESHOLD }} 100'

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@1.90.0

      - uses: actions/cache@v4
        with:
          path: |
            target/
          key: docs-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            docs-

      - name: Generate docs
        if: ${{ !cancelled() }}
        run: cargo doc --locked --lib --no-deps --all-features --document-private-items
        env:
          RUSTDOCFLAGS: -D warnings

      - name: Upload Docs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v5
        with:
          name: docs
          path: target/doc
